version: "3.9"

services:
  identity:
    image: quay.io/keycloak/keycloak:25.0.1
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: "$IDENTITY_ADMIN_PW"
    command: start-dev

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PW
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "$POSTGRES_PORT:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 3s
      timeout: 5s
      retries: 5
  app:
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./:/app
    ports:
      - "$SERVER_PORT:3000"
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PW: $POSTGRES_PW
      POSTGRES_DB: $POSTGRES_DB
      OIDC_AUTHORITY: $OIDC_AUTHORITY
      OIDC_CLIENT_ID: $OIDC_CLIENT_ID
      OIDC_REALM: $OIDC_REALM
      OIDC_REDIRECT_URL: $OIDC_REDIRECT_URL
      OIDC_SCHEME: $OIDC_SCHEME
      OIDC_COOKIE_NAME: $OIDC_COOKIE_NAME
    links:
      - postgres
      - identity
    depends_on:
      postgres:
        condition: service_healthy

  migrate:
    build:
      dockerfile: migrate.Dockerfile
    command: tail -F anything
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: host=$POSTGRES_HOST port=$POSTGRES_PORT user=$POSTGRES_USER password=$POSTGRES_PW dbname=$POSTGRES_DB
    volumes:
      - ./db/migrations:/migrations
    links:
      - postgres
volumes:
  postgres-data:
